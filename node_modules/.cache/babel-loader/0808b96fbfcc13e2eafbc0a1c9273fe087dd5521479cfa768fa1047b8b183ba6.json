{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\laksh\\\\Downloads\\\\chat gpt project\\\\chatgpt\\\\src\\\\App.js\";\nimport logo from \"./logo.svg\";\nimport { Configuration, OpenAIApi } from \"openai\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  console.log(import.meta.env.Open_AI_Key);\n  // const OPENAI_API_KEY = `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`;\n  const configuration = new Configuration({\n    apiKey: process.env.OPENAI_API_KEY\n  });\n  const openai = new OpenAIApi(configuration);\n  const generateImage = async () => {\n    const res = await openai.createImage({\n      prompt: prompt,\n      n: 1,\n      size: \"512x512\"\n    });\n    console.log(res.data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateImage,\n      children: \"generate an image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Configuration","OpenAIApi","App","console","log","import","meta","env","Open_AI_Key","configuration","apiKey","process","OPENAI_API_KEY","openai","generateImage","res","createImage","prompt","n","size","data"],"sources":["C:/Users/laksh/Downloads/chat gpt project/chatgpt/src/App.js"],"sourcesContent":["import logo from \"./logo.svg\";\n\nimport { Configuration, OpenAIApi } from \"openai\";\nimport \"./App.css\";\n\nfunction App() {\n  console.log(import.meta.env.Open_AI_Key);\n  // const OPENAI_API_KEY = `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`;\n  const configuration = new Configuration({\n    apiKey: process.env.OPENAI_API_KEY,\n  });\n\n  const openai = new OpenAIApi(configuration);\n\n  const generateImage = async () => {\n    const res = await openai.createImage({\n      prompt: prompt,\n      n: 1,\n      size: \"512x512\",\n    });\n    console.log(res.data);\n  };\n\n  return (\n    <div className=\"App\">\n      <button onClick={generateImage}>generate an image</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,YAAY;AAE7B,SAASC,aAAa,EAAEC,SAAS,QAAQ,QAAQ;AACjD,OAAO,WAAW;AAAC;AAEnB,SAASC,GAAG,GAAG;EACbC,OAAO,CAACC,GAAG,CAACC,MAAM,CAACC,IAAI,CAACC,GAAG,CAACC,WAAW,CAAC;EACxC;EACA,MAAMC,aAAa,GAAG,IAAIT,aAAa,CAAC;IACtCU,MAAM,EAAEC,OAAO,CAACJ,GAAG,CAACK;EACtB,CAAC,CAAC;EAEF,MAAMC,MAAM,GAAG,IAAIZ,SAAS,CAACQ,aAAa,CAAC;EAE3C,MAAMK,aAAa,GAAG,YAAY;IAChC,MAAMC,GAAG,GAAG,MAAMF,MAAM,CAACG,WAAW,CAAC;MACnCC,MAAM,EAAEA,MAAM;MACdC,CAAC,EAAE,CAAC;MACJC,IAAI,EAAE;IACR,CAAC,CAAC;IACFhB,OAAO,CAACC,GAAG,CAACW,GAAG,CAACK,IAAI,CAAC;EACvB,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB;MAAQ,OAAO,EAAEN,aAAc;MAAA,UAAC;IAAiB;MAAA;MAAA;MAAA;IAAA;EAAS;IAAA;IAAA;IAAA;EAAA,QACtD;AAEV;AAAC,KAvBQZ,GAAG;AAyBZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}